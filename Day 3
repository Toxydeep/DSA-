//Day 3
#include<iostream>
using namespace std;
//factorial using recursion

/*
int fact(int num){
     if(num==0){
        return 1;

     }
     else {
        return num* fact(num-1);
     }

}
int main(){

  int r=fact(4);
  cout<<r;
// 2 print n tymes number

int num=0;
void deep(){
    if(num==3)return;
      cout<<num;
    num++;
   deep();

}


int main(){

deep();
}

*/



// 3 print n types name

 void deep(int i,int j){
   if(i>j){ return;}
  else{ cout<<"Deepak"<<"\n";
   deep(i+1,j);

}
}



int main(){

deep(1,4);
}

// 4 print 1 to n numbers using recursion
void myfun(int i,int n){
    if(i>n) {return;}
    else{
        cout<<i<<"\n";
        myfun(i+1,n);
    }


}

int main(){
    int n=45;
    int i=1;
myfun(i,n);

}
 5 print n to 1 numbers using numbar

void myfun(int i,int n){
    if(n>i) {return;}
    else{
        cout<<i<<"\n";
        myfun(i-1,n);
    }
}

int main(){
    int n=1;
    int i=45;
myfun(i,n);

}


 6 Sum of n numbers
void myfun(int n){
    int sum=0;
   for(int i=1;i<=n;i++){
    sum+=i;
   }
cout<<sum;
    }


int main(){

    int n=40;

myfun(n);


}

 // 7  fibonacci series
int main(){
    int n=5,a=0,b=1,c;
    for(int i=2;i<=n;i++){
        c=a+b;
        cout<<c;
        a=b;
        b=c;

    }

}
